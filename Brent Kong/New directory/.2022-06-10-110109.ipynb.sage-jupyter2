{"backend_state":"init","connection_file":"/projects/79f0d46f-11ed-4ebe-8d2f-dc96b3f45fdf/.local/share/jupyter/runtime/kernel-8ac5fe4a-78ef-4954-b274-57ff33ce2bac.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"7d0b8e","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"1f77d0","input":"new_avo_data[\"Date\"][1][3]","output":{"0":{"data":{"text/plain":"'5'"},"exec_count":56,"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"1c82a1","input":"import pandas as pd\n#f = open(\"avocado.csv\")\navo_data = pd.read_csv(\"./avocado_data/avocado.csv\")#name folder, then file\n\n#avo_data\nnew_avo_data = avo_data.drop([\"Total Volume\",\"Total Bags\",\"4046\",\"4225\",\"4770\",\"Small Bags\",\"Large Bags\", \"XLarge Bags\",\"type\",\"year\",\"region\",\"Unnamed: 0\"],axis = 1)\nnew_avo_data.head()\n#new_avo_data[new_avo_data[\"AveragePrice\"].isnull()]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>AveragePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-12-27</td>\n      <td>1.33</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-12-20</td>\n      <td>1.35</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-12-13</td>\n      <td>0.93</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-12-06</td>\n      <td>1.08</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-11-29</td>\n      <td>1.28</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Date  AveragePrice\n0  2015-12-27          1.33\n1  2015-12-20          1.35\n2  2015-12-13          0.93\n3  2015-12-06          1.08\n4  2015-11-29          1.28"},"exec_count":61,"output_type":"execute_result"}},"pos":0,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"ac88f6","input":"original_2015()","output":{"0":{"name":"stderr","output_type":"stream","text":"<ipython-input-67-a90f070cf41d>:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  new_avo_data[\"Date\"][i] = new_avo_data[\"Date\"][i].split(\"-\")\n"},"1":{"name":"stdout","output_type":"stream","text":"2018-01-07\n"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"4b3c91","input":"new_avo_data[\"Date\"][1] = new_avo_data[\"Date\"][1].split(\"-\")\nnew_avo_data[\"Date\"][1]","output":{"0":{"ename":"AttributeError","evalue":"'list' object has no attribute 'split'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-70-f451a8505908>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mnew_avo_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_avo_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"-\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mnew_avo_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'list' object has no attribute 'split'"]}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"2de3a5","input":"avo_data.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Date</th>\n      <th>AveragePrice</th>\n      <th>Total Volume</th>\n      <th>4046</th>\n      <th>4225</th>\n      <th>4770</th>\n      <th>Total Bags</th>\n      <th>Small Bags</th>\n      <th>Large Bags</th>\n      <th>XLarge Bags</th>\n      <th>type</th>\n      <th>year</th>\n      <th>region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2015-12-27</td>\n      <td>1.33</td>\n      <td>64236.62</td>\n      <td>1036.74</td>\n      <td>54454.85</td>\n      <td>48.16</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2015-12-20</td>\n      <td>1.35</td>\n      <td>54876.98</td>\n      <td>674.28</td>\n      <td>44638.81</td>\n      <td>58.33</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2015-12-13</td>\n      <td>0.93</td>\n      <td>118220.22</td>\n      <td>794.70</td>\n      <td>109149.67</td>\n      <td>130.50</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2015-12-06</td>\n      <td>1.08</td>\n      <td>78992.15</td>\n      <td>1132.00</td>\n      <td>71976.41</td>\n      <td>72.58</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2015-11-29</td>\n      <td>1.28</td>\n      <td>51039.60</td>\n      <td>941.48</td>\n      <td>43838.39</td>\n      <td>75.78</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Unnamed: 0        Date  AveragePrice  Total Volume     4046       4225  \\\n0           0  2015-12-27          1.33      64236.62  1036.74   54454.85   \n1           1  2015-12-20          1.35      54876.98   674.28   44638.81   \n2           2  2015-12-13          0.93     118220.22   794.70  109149.67   \n3           3  2015-12-06          1.08      78992.15  1132.00   71976.41   \n4           4  2015-11-29          1.28      51039.60   941.48   43838.39   \n\n     4770  Total Bags  Small Bags  Large Bags  XLarge Bags          type  \\\n0   48.16     8696.87     8603.62       93.25          0.0  conventional   \n1   58.33     9505.56     9408.07       97.49          0.0  conventional   \n2  130.50     8145.35     8042.21      103.14          0.0  conventional   \n3   72.58     5811.16     5677.40      133.76          0.0  conventional   \n4   75.78     6183.95     5986.26      197.69          0.0  conventional   \n\n   year  region  \n0  2015  Albany  \n1  2015  Albany  \n2  2015  Albany  \n3  2015  Albany  \n4  2015  Albany  "},"exec_count":71,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":72,"id":"1c7968","input":"avo_data[\"year\"].unique()","output":{"0":{"data":{"text/plain":"array([2015, 2016, 2017, 2018])"},"exec_count":72,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"9333a0","input":"shorten = round(avo_data[[\"AveragePrice\", \"year\"]].groupby(\"year\").mean(),2)#[\"AveragePrice\", \"year\"] means select both columns.  Add extra brackets to select multiple rows.  Year was set as an index\nshorten.reset_index(inplace = True)\nshorten","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>AveragePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015</td>\n      <td>1.38</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2016</td>\n      <td>1.34</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2017</td>\n      <td>1.52</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018</td>\n      <td>1.35</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   year  AveragePrice\n0  2015          1.38\n1  2016          1.34\n2  2017          1.52\n3  2018          1.35"},"exec_count":86,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"075250","input":"import matplotlib.pyplot as plt\nplt.plot(shorten['year'], shorten['AveragePrice'], marker='o')\n\n\n\nplt.xlabel(\"Year\")\nplt.ylabel(\"Price\")\nplt.title(\"Average Avocado Prices Over the Years\")\n\nplt.show()\n","output":{"0":{"name":"stderr","output_type":"stream","text":"/usr/lib/python3/dist-packages/matplotlib/cbook/__init__.py:1402: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  ndim = x[:, None].ndim\n/usr/lib/python3/dist-packages/matplotlib/axes/_base.py:276: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  x = x[:, np.newaxis]\n/usr/lib/python3/dist-packages/matplotlib/axes/_base.py:278: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  y = y[:, np.newaxis]\n"},"1":{"data":{"image/png":"9b41e35b13bfa627e05b4cf0841ebdcd567c9b2e","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":87,"metadata":{"image/png":{"height":440,"width":733},"needs_background":"light"},"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":90,"id":"a5c4ad","input":"def original_2015():\n    for i in range(len(new_avo_data[\"Date\"])):\n        if new_avo_data[\"Date\"][i][3] == \"5\":\n            a = new_avo_data[\"Date\"][i].split(\"-\")\n            del a[1]\n            del a[1]\n    new_avo_data[\"Date\"] = new_avo_data[\"Date\"].replace([new_avo_data[\"Date\"][i]],a)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":91,"id":"3094f2","input":"original_2015\nnew_avo_data[\"Date\"]","output":{"0":{"data":{"text/plain":"0            [2015]\n1            [2015]\n2            [2015]\n3            [2015]\n4            [2015]\n            ...    \n18244    2018-02-04\n18245    2018-01-28\n18246    2018-01-21\n18247    2018-01-14\n18248    2018-01-07\nName: Date, Length: 18249, dtype: object"},"exec_count":91,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"id":0,"time":1654895015864,"type":"user"}
{"last_load":1654978618150,"type":"file"}