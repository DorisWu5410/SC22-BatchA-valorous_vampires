{"backend_state":"running","connection_file":"/projects/79f0d46f-11ed-4ebe-8d2f-dc96b3f45fdf/.local/share/jupyter/runtime/kernel-b411c0c7-1f11-4cf2-aa72-c1c1f54525aa.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"end":1655324971120,"exec_count":1,"id":"845ad2","input":"import pandas as pd\nimport numpy as np\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import balanced_accuracy_score, roc_auc_score, make_scorer\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix","kernel":"python3-ubuntu","no_halt":true,"pos":0,"start":1655324970300,"state":"done","type":"cell"}
{"end":1655324971174,"exec_count":2,"id":"139f98","input":"df = pd.read_csv('./DS-Notebooks-Summer-2022/week1/Data/avocado.csv')","kernel":"python3-ubuntu","no_halt":true,"pos":1,"start":1655324971128,"state":"done","type":"cell"}
{"end":1655324971221,"exec_count":3,"id":"efe719","input":"df.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Date</th>\n      <th>AveragePrice</th>\n      <th>Total Volume</th>\n      <th>4046</th>\n      <th>4225</th>\n      <th>4770</th>\n      <th>Total Bags</th>\n      <th>Small Bags</th>\n      <th>Large Bags</th>\n      <th>XLarge Bags</th>\n      <th>type</th>\n      <th>year</th>\n      <th>region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2015-12-27</td>\n      <td>1.33</td>\n      <td>64236.62</td>\n      <td>1036.74</td>\n      <td>54454.85</td>\n      <td>48.16</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2015-12-20</td>\n      <td>1.35</td>\n      <td>54876.98</td>\n      <td>674.28</td>\n      <td>44638.81</td>\n      <td>58.33</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2015-12-13</td>\n      <td>0.93</td>\n      <td>118220.22</td>\n      <td>794.70</td>\n      <td>109149.67</td>\n      <td>130.50</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2015-12-06</td>\n      <td>1.08</td>\n      <td>78992.15</td>\n      <td>1132.00</td>\n      <td>71976.41</td>\n      <td>72.58</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2015-11-29</td>\n      <td>1.28</td>\n      <td>51039.60</td>\n      <td>941.48</td>\n      <td>43838.39</td>\n      <td>75.78</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>2015</td>\n      <td>Albany</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Unnamed: 0        Date  AveragePrice  Total Volume     4046       4225  \\\n0           0  2015-12-27          1.33      64236.62  1036.74   54454.85   \n1           1  2015-12-20          1.35      54876.98   674.28   44638.81   \n2           2  2015-12-13          0.93     118220.22   794.70  109149.67   \n3           3  2015-12-06          1.08      78992.15  1132.00   71976.41   \n4           4  2015-11-29          1.28      51039.60   941.48   43838.39   \n\n     4770  Total Bags  Small Bags  Large Bags  XLarge Bags          type  \\\n0   48.16     8696.87     8603.62       93.25          0.0  conventional   \n1   58.33     9505.56     9408.07       97.49          0.0  conventional   \n2  130.50     8145.35     8042.21      103.14          0.0  conventional   \n3   72.58     5811.16     5677.40      133.76          0.0  conventional   \n4   75.78     6183.95     5986.26      197.69          0.0  conventional   \n\n   year  region  \n0  2015  Albany  \n1  2015  Albany  \n2  2015  Albany  \n3  2015  Albany  \n4  2015  Albany  "},"exec_count":3}},"pos":2,"start":1655324971182,"state":"done","type":"cell"}
{"end":1655324971242,"exec_count":4,"id":"37e5b2","input":"df.drop(['Unnamed: 0', '4046', '4225', '4770','year'], axis=1, inplace=True)\ndf.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>AveragePrice</th>\n      <th>Total Volume</th>\n      <th>Total Bags</th>\n      <th>Small Bags</th>\n      <th>Large Bags</th>\n      <th>XLarge Bags</th>\n      <th>type</th>\n      <th>region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-12-27</td>\n      <td>1.33</td>\n      <td>64236.62</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-12-20</td>\n      <td>1.35</td>\n      <td>54876.98</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-12-13</td>\n      <td>0.93</td>\n      <td>118220.22</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-12-06</td>\n      <td>1.08</td>\n      <td>78992.15</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-11-29</td>\n      <td>1.28</td>\n      <td>51039.60</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Date  AveragePrice  Total Volume  Total Bags  Small Bags  Large Bags  \\\n0  2015-12-27          1.33      64236.62     8696.87     8603.62       93.25   \n1  2015-12-20          1.35      54876.98     9505.56     9408.07       97.49   \n2  2015-12-13          0.93     118220.22     8145.35     8042.21      103.14   \n3  2015-12-06          1.08      78992.15     5811.16     5677.40      133.76   \n4  2015-11-29          1.28      51039.60     6183.95     5986.26      197.69   \n\n   XLarge Bags          type  region  \n0          0.0  conventional  Albany  \n1          0.0  conventional  Albany  \n2          0.0  conventional  Albany  \n3          0.0  conventional  Albany  \n4          0.0  conventional  Albany  "},"exec_count":4}},"pos":3,"start":1655324971226,"state":"done","type":"cell"}
{"end":1655324971250,"exec_count":5,"id":"c06624","input":"df['region'].unique()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"array(['Albany', 'Atlanta', 'BaltimoreWashington', 'Boise', 'Boston',\n       'BuffaloRochester', 'California', 'Charlotte', 'Chicago',\n       'CincinnatiDayton', 'Columbus', 'DallasFtWorth', 'Denver',\n       'Detroit', 'GrandRapids', 'GreatLakes', 'HarrisburgScranton',\n       'HartfordSpringfield', 'Houston', 'Indianapolis', 'Jacksonville',\n       'LasVegas', 'LosAngeles', 'Louisville', 'MiamiFtLauderdale',\n       'Midsouth', 'Nashville', 'NewOrleansMobile', 'NewYork',\n       'Northeast', 'NorthernNewEngland', 'Orlando', 'Philadelphia',\n       'PhoenixTucson', 'Pittsburgh', 'Plains', 'Portland',\n       'RaleighGreensboro', 'RichmondNorfolk', 'Roanoke', 'Sacramento',\n       'SanDiego', 'SanFrancisco', 'Seattle', 'SouthCarolina',\n       'SouthCentral', 'Southeast', 'Spokane', 'StLouis', 'Syracuse',\n       'Tampa', 'TotalUS', 'West', 'WestTexNewMexico'], dtype=object)"},"exec_count":5}},"pos":4,"start":1655324971244,"state":"done","type":"cell"}
{"end":1655324971277,"exec_count":6,"id":"4299ea","input":"df.columns = df.columns.str.replace(' ','_')\ndf.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>AveragePrice</th>\n      <th>Total_Volume</th>\n      <th>Total_Bags</th>\n      <th>Small_Bags</th>\n      <th>Large_Bags</th>\n      <th>XLarge_Bags</th>\n      <th>type</th>\n      <th>region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-12-27</td>\n      <td>1.33</td>\n      <td>64236.62</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-12-20</td>\n      <td>1.35</td>\n      <td>54876.98</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-12-13</td>\n      <td>0.93</td>\n      <td>118220.22</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-12-06</td>\n      <td>1.08</td>\n      <td>78992.15</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-11-29</td>\n      <td>1.28</td>\n      <td>51039.60</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Date  AveragePrice  Total_Volume  Total_Bags  Small_Bags  Large_Bags  \\\n0  2015-12-27          1.33      64236.62     8696.87     8603.62       93.25   \n1  2015-12-20          1.35      54876.98     9505.56     9408.07       97.49   \n2  2015-12-13          0.93     118220.22     8145.35     8042.21      103.14   \n3  2015-12-06          1.08      78992.15     5811.16     5677.40      133.76   \n4  2015-11-29          1.28      51039.60     6183.95     5986.26      197.69   \n\n   XLarge_Bags          type  region  \n0          0.0  conventional  Albany  \n1          0.0  conventional  Albany  \n2          0.0  conventional  Albany  \n3          0.0  conventional  Albany  \n4          0.0  conventional  Albany  "},"exec_count":6}},"pos":6,"scrolled":true,"start":1655324971263,"state":"done","type":"cell"}
{"end":1655324971287,"exec_count":7,"id":"7bb3b2","input":"df.dtypes","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"Date             object\nAveragePrice    float64\nTotal_Volume    float64\nTotal_Bags      float64\nSmall_Bags      float64\nLarge_Bags      float64\nXLarge_Bags     float64\ntype             object\nregion           object\ndtype: object"},"exec_count":7}},"pos":7,"start":1655324971279,"state":"done","type":"cell"}
{"end":1655324971304,"exec_count":8,"id":"fb7d95","input":"X=df.drop('AveragePrice',axis=1).copy()\nX.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Total_Volume</th>\n      <th>Total_Bags</th>\n      <th>Small_Bags</th>\n      <th>Large_Bags</th>\n      <th>XLarge_Bags</th>\n      <th>type</th>\n      <th>region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-12-27</td>\n      <td>64236.62</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-12-20</td>\n      <td>54876.98</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-12-13</td>\n      <td>118220.22</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-12-06</td>\n      <td>78992.15</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-11-29</td>\n      <td>51039.60</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Date  Total_Volume  Total_Bags  Small_Bags  Large_Bags  XLarge_Bags  \\\n0  2015-12-27      64236.62     8696.87     8603.62       93.25          0.0   \n1  2015-12-20      54876.98     9505.56     9408.07       97.49          0.0   \n2  2015-12-13     118220.22     8145.35     8042.21      103.14          0.0   \n3  2015-12-06      78992.15     5811.16     5677.40      133.76          0.0   \n4  2015-11-29      51039.60     6183.95     5986.26      197.69          0.0   \n\n           type  region  \n0  conventional  Albany  \n1  conventional  Albany  \n2  conventional  Albany  \n3  conventional  Albany  \n4  conventional  Albany  "},"exec_count":8}},"pos":8,"start":1655324971292,"state":"done","type":"cell"}
{"end":1655324971313,"exec_count":9,"id":"d2f3da","input":"y=df['AveragePrice'].copy()\ny.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"0    1.33\n1    1.35\n2    0.93\n3    1.08\n4    1.28\nName: AveragePrice, dtype: float64"},"exec_count":9}},"pos":9,"start":1655324971307,"state":"done","type":"cell"}
{"end":1655324971322,"exec_count":10,"id":"2bf1ec","input":"X.dtypes","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"Date             object\nTotal_Volume    float64\nTotal_Bags      float64\nSmall_Bags      float64\nLarge_Bags      float64\nXLarge_Bags     float64\ntype             object\nregion           object\ndtype: object"},"exec_count":10}},"pos":10,"start":1655324971315,"state":"done","type":"cell"}
{"end":1655324971376,"exec_count":11,"id":"7eb007","input":"pd.get_dummies(X, columns=['Date']).head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total_Volume</th>\n      <th>Total_Bags</th>\n      <th>Small_Bags</th>\n      <th>Large_Bags</th>\n      <th>XLarge_Bags</th>\n      <th>type</th>\n      <th>region</th>\n      <th>Date_2015-01-04</th>\n      <th>Date_2015-01-11</th>\n      <th>Date_2015-01-18</th>\n      <th>...</th>\n      <th>Date_2018-01-21</th>\n      <th>Date_2018-01-28</th>\n      <th>Date_2018-02-04</th>\n      <th>Date_2018-02-11</th>\n      <th>Date_2018-02-18</th>\n      <th>Date_2018-02-25</th>\n      <th>Date_2018-03-04</th>\n      <th>Date_2018-03-11</th>\n      <th>Date_2018-03-18</th>\n      <th>Date_2018-03-25</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>64236.62</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>54876.98</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>118220.22</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78992.15</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>51039.60</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>conventional</td>\n      <td>Albany</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 176 columns</p>\n</div>","text/plain":"   Total_Volume  Total_Bags  Small_Bags  Large_Bags  XLarge_Bags  \\\n0      64236.62     8696.87     8603.62       93.25          0.0   \n1      54876.98     9505.56     9408.07       97.49          0.0   \n2     118220.22     8145.35     8042.21      103.14          0.0   \n3      78992.15     5811.16     5677.40      133.76          0.0   \n4      51039.60     6183.95     5986.26      197.69          0.0   \n\n           type  region  Date_2015-01-04  Date_2015-01-11  Date_2015-01-18  \\\n0  conventional  Albany                0                0                0   \n1  conventional  Albany                0                0                0   \n2  conventional  Albany                0                0                0   \n3  conventional  Albany                0                0                0   \n4  conventional  Albany                0                0                0   \n\n   ...  Date_2018-01-21  Date_2018-01-28  Date_2018-02-04  Date_2018-02-11  \\\n0  ...                0                0                0                0   \n1  ...                0                0                0                0   \n2  ...                0                0                0                0   \n3  ...                0                0                0                0   \n4  ...                0                0                0                0   \n\n   Date_2018-02-18  Date_2018-02-25  Date_2018-03-04  Date_2018-03-11  \\\n0                0                0                0                0   \n1                0                0                0                0   \n2                0                0                0                0   \n3                0                0                0                0   \n4                0                0                0                0   \n\n   Date_2018-03-18  Date_2018-03-25  \n0                0                0  \n1                0                0  \n2                0                0  \n3                0                0  \n4                0                0  \n\n[5 rows x 176 columns]"},"exec_count":11}},"pos":11,"start":1655324971333,"state":"done","type":"cell"}
{"end":1655324971407,"exec_count":12,"id":"9785e1","input":"X_encoded = pd.get_dummies(X, columns=['type'])\nX_encoded.head()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Total_Volume</th>\n      <th>Total_Bags</th>\n      <th>Small_Bags</th>\n      <th>Large_Bags</th>\n      <th>XLarge_Bags</th>\n      <th>region</th>\n      <th>type_conventional</th>\n      <th>type_organic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-12-27</td>\n      <td>64236.62</td>\n      <td>8696.87</td>\n      <td>8603.62</td>\n      <td>93.25</td>\n      <td>0.0</td>\n      <td>Albany</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-12-20</td>\n      <td>54876.98</td>\n      <td>9505.56</td>\n      <td>9408.07</td>\n      <td>97.49</td>\n      <td>0.0</td>\n      <td>Albany</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-12-13</td>\n      <td>118220.22</td>\n      <td>8145.35</td>\n      <td>8042.21</td>\n      <td>103.14</td>\n      <td>0.0</td>\n      <td>Albany</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-12-06</td>\n      <td>78992.15</td>\n      <td>5811.16</td>\n      <td>5677.40</td>\n      <td>133.76</td>\n      <td>0.0</td>\n      <td>Albany</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-11-29</td>\n      <td>51039.60</td>\n      <td>6183.95</td>\n      <td>5986.26</td>\n      <td>197.69</td>\n      <td>0.0</td>\n      <td>Albany</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Date  Total_Volume  Total_Bags  Small_Bags  Large_Bags  XLarge_Bags  \\\n0  2015-12-27      64236.62     8696.87     8603.62       93.25          0.0   \n1  2015-12-20      54876.98     9505.56     9408.07       97.49          0.0   \n2  2015-12-13     118220.22     8145.35     8042.21      103.14          0.0   \n3  2015-12-06      78992.15     5811.16     5677.40      133.76          0.0   \n4  2015-11-29      51039.60     6183.95     5986.26      197.69          0.0   \n\n   region  type_conventional  type_organic  \n0  Albany                  1             0  \n1  Albany                  1             0  \n2  Albany                  1             0  \n3  Albany                  1             0  \n4  Albany                  1             0  "},"exec_count":12}},"pos":12,"start":1655324971380,"state":"done","type":"cell"}
{"end":1655324971420,"exec_count":13,"id":"dedb6c","input":"y.unique()","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1.33, 1.35, 0.93, 1.08, 1.28, 1.26, 0.99, 0.98, 1.02, 1.07, 1.12,\n       1.31, 1.11, 1.34, 1.45, 1.05, 1.37, 1.27, 1.32, 1.23, 1.19, 1.43,\n       1.2 , 1.22, 1.13, 1.16, 1.06, 1.17, 1.24, 0.96, 1.  , 1.09, 0.95,\n       0.97, 1.15, 1.01, 1.14, 1.1 , 1.04, 1.03, 1.18, 1.29, 1.25, 0.71,\n       0.94, 0.91, 1.39, 1.4 , 1.36, 1.3 , 1.54, 1.59, 1.56, 1.38, 1.49,\n       1.5 , 1.47, 1.42, 1.41, 1.44, 1.52, 0.9 , 0.87, 0.78, 0.92, 0.83,\n       0.88, 0.84, 0.85, 1.21, 0.79, 0.89, 0.86, 0.8 , 0.82, 0.74, 0.81,\n       0.77, 0.75, 0.65, 0.73, 0.68, 0.72, 0.67, 0.76, 0.62, 0.7 , 0.66,\n       1.46, 0.49, 0.53, 0.56, 0.6 , 0.58, 0.54, 0.52, 0.51, 0.57, 0.63,\n       0.64, 0.61, 1.48, 1.55, 1.58, 1.53, 1.57, 1.51, 0.69, 1.62, 1.63,\n       1.61, 1.6 , 1.73, 1.8 , 1.86, 1.85, 1.69, 1.66, 1.65, 1.64, 1.67,\n       1.68, 1.82, 2.07, 1.84, 1.83, 1.7 , 1.72, 1.81, 1.78, 0.59, 1.9 ,\n       1.93, 1.99, 1.95, 1.89, 1.76, 1.71, 1.74, 0.55, 1.79, 1.75, 1.94,\n       2.2 , 1.87, 1.77, 2.06, 2.11, 2.22, 2.14, 2.15, 2.02, 2.  , 1.88,\n       1.96, 2.19, 2.09, 1.98, 1.97, 1.92, 2.04, 0.46, 2.01, 2.08, 2.03,\n       2.05, 2.28, 2.35, 2.29, 1.91, 2.18, 2.24, 2.12, 2.13, 2.16, 2.32,\n       2.34, 2.33, 2.31, 2.23, 2.27, 2.3 , 2.41, 2.36, 2.37, 2.39, 2.42,\n       2.45, 2.38, 2.4 , 2.25, 2.26, 2.17, 2.21, 2.1 , 2.58, 2.79, 2.66,\n       2.59, 2.74, 2.73, 2.77, 2.71, 2.72, 2.76, 2.75, 2.49, 2.54, 2.67,\n       2.68, 2.57, 2.85, 3.03, 2.91, 2.44, 2.65, 2.46, 2.62, 2.47, 2.55,\n       2.52, 2.61, 2.82, 2.51, 2.56, 2.88, 2.94, 2.99, 3.12, 3.25, 2.93,\n       2.64, 2.89, 2.83, 2.78, 2.63, 2.8 , 2.48, 2.5 , 2.53, 0.44, 0.48,\n       2.6 , 2.43, 2.81, 3.05, 2.87, 2.86, 2.84, 3.  , 2.92, 2.97, 3.04,\n       2.9 , 2.7 , 2.69, 2.96, 2.95, 3.17])"},"exec_count":13}},"pos":13,"start":1655324971411,"state":"done","type":"cell"}
{"end":1655324971432,"exec_count":14,"id":"c691e5","input":"sum(y)/len(y)","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"1.4059784097758825"},"exec_count":14}},"pos":14,"start":1655324971428,"state":"done","type":"cell"}
{"end":1655324971442,"exec_count":15,"id":"092828","input":"X_train,X_test,y_train,y_test = train_test_split(X_encoded, y, random_state=42)","kernel":"python3-ubuntu","no_halt":true,"pos":15,"start":1655324971435,"state":"done","type":"cell"}
{"end":1655324971466,"exec_count":16,"id":"8a251e","input":"len(X_train)","kernel":"python3-ubuntu","no_halt":true,"output":{"0":{"data":{"text/plain":"13686"},"exec_count":16}},"pos":15.5,"start":1655324971445,"state":"done","type":"cell"}
{"end":1655325252495,"exec_count":17,"id":"3cee4e","input":"clf_xgb = xgb.XGBClassifier(objective='binary:logistic',missing=None,seed=42)\nclf_xgb.fit(X_train,y_train,verbose=True,early_stopping_rounds=10,eval_metric=\"aucpr\",eval_set=[(X_test,y_test)])","kernel":"python3-ubuntu","output":{"0":{"ename":"ValueError","evalue":"Invalid classes inferred from unique values of `y`.  Expected: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53\n  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71\n  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89\n  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107\n 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125\n 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143\n 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161\n 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179\n 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197\n 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215\n 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233\n 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251\n 252 253 254], got [0.44 0.46 0.48 0.49 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59 0.6\n 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.7  0.71 0.72 0.73 0.74\n 0.75 0.76 0.77 0.78 0.79 0.8  0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88\n 0.89 0.9  0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.   1.01 1.02\n 1.03 1.04 1.05 1.06 1.07 1.08 1.09 1.1  1.11 1.12 1.13 1.14 1.15 1.16\n 1.17 1.18 1.19 1.2  1.21 1.22 1.23 1.24 1.25 1.26 1.27 1.28 1.29 1.3\n 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4  1.41 1.42 1.43 1.44\n 1.45 1.46 1.47 1.48 1.49 1.5  1.51 1.52 1.53 1.54 1.55 1.56 1.57 1.58\n 1.59 1.6  1.61 1.62 1.63 1.64 1.65 1.66 1.67 1.68 1.69 1.7  1.71 1.72\n 1.73 1.74 1.75 1.76 1.77 1.78 1.79 1.8  1.81 1.82 1.83 1.84 1.85 1.86\n 1.87 1.88 1.89 1.9  1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 2.\n 2.01 2.02 2.03 2.04 2.05 2.06 2.07 2.08 2.09 2.1  2.11 2.12 2.13 2.14\n 2.15 2.16 2.17 2.18 2.19 2.2  2.21 2.22 2.23 2.24 2.25 2.26 2.27 2.28\n 2.29 2.3  2.31 2.32 2.33 2.34 2.35 2.36 2.37 2.38 2.39 2.4  2.41 2.42\n 2.43 2.44 2.45 2.46 2.47 2.48 2.49 2.5  2.51 2.52 2.53 2.54 2.55 2.56\n 2.57 2.58 2.59 2.6  2.61 2.62 2.63 2.64 2.65 2.66 2.67 2.69 2.7  2.71\n 2.72 2.73 2.74 2.75 2.76 2.77 2.78 2.79 2.8  2.81 2.82 2.83 2.84 2.85\n 2.86 2.87 2.88 2.89 2.9  2.91 2.92 2.93 2.94 2.95 2.97 2.99 3.   3.04\n 3.05 3.12 3.17]","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-a9dbea630f56>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mclf_xgb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mXGBClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobjective\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'binary:logistic'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmissing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mseed\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mclf_xgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mearly_stopping_rounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0meval_metric\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"aucpr\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0meval_set\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m~/.local/lib/python3.8/site-packages/xgboost/core.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    530\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    531\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 532\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    534\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/.local/lib/python3.8/site-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, base_margin, eval_set, eval_metric, early_stopping_rounds, verbose, xgb_model, sample_weight_eval_set, base_margin_eval_set, feature_weights, callbacks)\u001b[0m\n\u001b[1;32m   1355\u001b[0m             \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mexpected_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1356\u001b[0m         ):\n\u001b[0;32m-> 1357\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m   1358\u001b[0m                 \u001b[0;34mf\"Invalid classes inferred from unique values of `y`.  \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1359\u001b[0m                 \u001b[0;34mf\"Expected: {expected_classes}, got {self.classes_}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Invalid classes inferred from unique values of `y`.  Expected: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53\n  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71\n  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89\n  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107\n 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125\n 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143\n 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161\n 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179\n 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197\n 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215\n 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233\n 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251\n 252 253 254], got [0.44 0.46 0.48 0.49 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59 0.6\n 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.7  0.71 0.72 0.73 0.74\n 0.75 0.76 0.77 0.78 0.79 0.8  0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88\n 0.89 0.9  0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.   1.01 1.02\n 1.03 1.04 1.05 1.06 1.07 1.08 1.09 1.1  1.11 1.12 1.13 1.14 1.15 1.16\n 1.17 1.18 1.19 1.2  1.21 1.22 1.23 1.24 1.25 1.26 1.27 1.28 1.29 1.3\n 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4  1.41 1.42 1.43 1.44\n 1.45 1.46 1.47 1.48 1.49 1.5  1.51 1.52 1.53 1.54 1.55 1.56 1.57 1.58\n 1.59 1.6  1.61 1.62 1.63 1.64 1.65 1.66 1.67 1.68 1.69 1.7  1.71 1.72\n 1.73 1.74 1.75 1.76 1.77 1.78 1.79 1.8  1.81 1.82 1.83 1.84 1.85 1.86\n 1.87 1.88 1.89 1.9  1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 2.\n 2.01 2.02 2.03 2.04 2.05 2.06 2.07 2.08 2.09 2.1  2.11 2.12 2.13 2.14\n 2.15 2.16 2.17 2.18 2.19 2.2  2.21 2.22 2.23 2.24 2.25 2.26 2.27 2.28\n 2.29 2.3  2.31 2.32 2.33 2.34 2.35 2.36 2.37 2.38 2.39 2.4  2.41 2.42\n 2.43 2.44 2.45 2.46 2.47 2.48 2.49 2.5  2.51 2.52 2.53 2.54 2.55 2.56\n 2.57 2.58 2.59 2.6  2.61 2.62 2.63 2.64 2.65 2.66 2.67 2.69 2.7  2.71\n 2.72 2.73 2.74 2.75 2.76 2.77 2.78 2.79 2.8  2.81 2.82 2.83 2.84 2.85\n 2.86 2.87 2.88 2.89 2.9  2.91 2.92 2.93 2.94 2.95 2.97 2.99 3.   3.04\n 3.05 3.12 3.17]"]}},"pos":16,"start":1655325252287,"state":"done","type":"cell"}
{"id":"2bf7e2","input":"","pos":17,"type":"cell"}
{"id":0,"time":1655328568781,"type":"user"}
{"last_load":1655316761239,"type":"file"}